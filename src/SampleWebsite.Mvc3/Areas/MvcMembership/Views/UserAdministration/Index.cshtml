@using PagedList.Mvc
@model SampleWebsite.Mvc3.Areas.MvcMembership.Models.UserAdministration.IndexViewModel
@{
   ViewBag.Title = @Resources.UserAdministration;
   Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />
<link href='@Url.Content("~/Content/PagedList.css")' rel="stylesheet" type="text/css" />

@if(!Model.IsRolesEnabled){
   <p class="mvcMembership-warning">@Resources.WarningRoleProviderDisabled<br />@Resources.WarningChangeRoleManager</p>
}

<h2 class="mvcMembership">@Resources.UserAdministration</h2>

<h3 class="mvcMembership">@Resources.FindAUser
   @if (!string.IsNullOrWhiteSpace(Model.Search)) { 
      <span>(@Html.ActionLink(Resources.ClearSearch, "Index"))</span>
   }
</h3>
<form method="get" class="mvcMembership-searchForm">
   <fieldset>
      <label>
         @Resources.UsernameOrEmailAddressLabel
         <input type="text" name="search" value="@Model.Search" />
         <input type="submit" value="Search" />
      </label>
   </fieldset>
</form>
   
<h3 class="mvcMembership">@Resources.Users (@Html.ActionLink(@Resources.NewUser, "CreateUser", "UserAdministration"))</h3>
<div class="mvcMembership-allUsers">
@if(Model.Users.Count > 0){
   <ul class="mvcMembership mvcMembership-users">
      @foreach(var user in Model.Users){
      <li>
         <span class="mvcMembership-username">@Html.ActionLink(user.UserName, "Details", new{ id = user.ProviderUserKey})</span>
         <span class="mvcMembership-email"><a href="mailto:@user.Email">@user.Email</a></span>
         @if(user.IsOnline){
            <span class="mvcMembership-isOnline">@Resources.Online</span>
         }else{
            <span class="mvcMembership-isOffline">@Resources.OfflineFor
               @{
                  var offlineSince = (DateTime.Now - user.LastActivityDate);
                  if (offlineSince.TotalSeconds <= 60){
                     <text>@Resources.OneMinute</text>
                  }else if(offlineSince.TotalMinutes < 60){
                     <text>@Math.Floor(offlineSince.TotalMinutes) @Resources.Minutes</text>
                  }else if (offlineSince.TotalMinutes < 120){
                     <text>@Resources.OneHour</text>
                  }else if (offlineSince.TotalHours < 24){
                     <text>@Math.Floor(offlineSince.TotalHours) @Resources.Hours</text>
                  }else if (offlineSince.TotalHours < 48){
                     <text>@Resources.OneDay</text>
                  }else{
                     <text>@Math.Floor(offlineSince.TotalDays) @Resources.Days</text>
                  }
               }
            </span>
         }
         @if(!string.IsNullOrEmpty(user.Comment)){
            <span class="mvcMembership-comment">@user.Comment</span>
         }
      </li>
      }
   </ul>
   @Html.PagedListPager(Model.Users, page => Url.Action("Index", new { page, search = Model.Search }), new PagedListRenderOptions
                                                                                                      {
                                                                                                         LinkToFirstPageFormat = @Resources.PagedListFirst,
                                                                                                         LinkToPreviousPageFormat = @Resources.PagedListPrevious,
                                                                                                         LinkToNextPageFormat = @Resources.PagedListNext,
                                                                                                         LinkToLastPageFormat = @Resources.PagedListLast
                                                                                                      })
}else{
   <p>@Resources.NoUsersHaveRegistered</p>
}
</div>

@if(Model.IsRolesEnabled){
   <h3 class="mvcMembership">@Resources.Roles</h3>
   <div class="mvcMembership-allRoles">
   @if(Model.Roles.Count() > 0 ){
      <ul class="mvcMembership">
         @foreach(var role in Model.Roles){
         <li>
            @Html.ActionLink(role, "Role", new{id = role})
            @using(Html.BeginForm("DeleteRole", "UserAdministration", new{id=role})){
            <input type="submit" value="@Resources.Delete" />
            }
         </li>
         }
      </ul>
   }else{
      <p>@Resources.NoRolesHaveBeenCreated</p>
   }

   @using(Html.BeginForm("CreateRole", "UserAdministration")){
      <fieldset>
         <label for="id">@Resources.RoleLabel</label>
         @Html.TextBox("id")
         <input type="submit" value="@Resources.CreateRole" />
      </fieldset>
   }
   </div>
}